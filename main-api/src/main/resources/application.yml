# Server Configuration
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

# Spring Configuration
spring:
  # Application Info
  application:
    name: coffee-shop-main-api
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:coffee_shop}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
  
  # JPA/Hibernate Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate  # Use 'create-drop' for development, 'validate' for production
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  
  # Flyway Migration
  flyway:
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
  
  # RabbitMQ Configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VHOST:/}
    listener:
      simple:
        acknowledge-mode: auto
        concurrency: 1
        max-concurrency: 5
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 1000
  
  # Jackson Configuration (JSON)
  jackson:
    serialization:
      write-dates-as-timestamps: false
      indent-output: true
    deserialization:
      fail-on-unknown-properties: false
    time-zone: UTC
  
  # Security Configuration
  security:
    user:
      name: admin
      password: admin123
      roles: ADMIN

# JWT Configuration (Custom Properties)
jwt:
  secret: ${JWT_SECRET:myVerySecretKeyThatShouldBeAtLeast256BitsLong}
  expiration: ${JWT_EXPIRATION:86400000}  # 24 hours in milliseconds
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 days

# RabbitMQ Queue Configuration (Custom Properties)
rabbitmq:
  queues:
    user-registration: user.registration.queue
    order-status-update: order.status.update.queue
  exchanges:
    user-events: user.events.exchange
    order-events: order.events.exchange
  routing-keys:
    user-registered: user.registered
    order-status-changed: order.status.changed

# Logging Configuration
logging:
  level:
    com.coffeeshop: ${LOG_LEVEL:INFO}
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/coffee-shop-main-api.log
    max-size: 10MB
    max-history: 30

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
  endpoint:
    health:
      show-details: when-authorized
  info:
    env:
      enabled: true

# Application Information
info:
  app:
    name: Coffee Shop Management System
    description: Main API for coffee shop management
    version: 1.0.0
    author: Your Name